# 한 기술 회사는 "학술의 별" 대회를 개최했는데, 참가 인원은 100명을 넘지 않으며,
# 시합은 3라운드로 나뉜다. 예선, 준결승, 결승 
# 키보드에서 각 선수의 예선 성적 x(정수)와 준결승 성적 y(정수)를 입력한다.
# 처음 두 라운드의 종합 성적이 z<90(z=0.25*x+0.75*y, z는 부동 소수점 유형)이면
# 결선 진출 불가, 예선과 준결승이 모두 만점일 경우, 이 멤버는 결선 진출없이 1등상을
# 받는다. 1등에 직접 당첨된 선수가 없을 경우 프로그램은 'Not Found'로 출력된다.
# 결승에 진출한 참가자의 예선 성적, 준결승 성적, 예선,준결승 대회 종합성적을 출력해야 하며,
# 출력 결과는 종합성적의 내림차순으로 배열되어야 한다.

# (입력 데이터는 입력이 요구 사항을 충족한다고 가정하여 적법성 검사가 필요하지 않다. 아래 함수의 원형에 따라 프로그램 작성 실시.)

# int Input(int x[], int y[], float z[]); //키패드에서 각 참가자의 예선과 준결승 성적을 입력.
# 배열 x[] y[]를 각각 저장한다. 입력된 예선 성적이 0보다 작을 때 종료.
# 그리고 처음 두 라운드의 종합성적을 계산하여 배열 z[]에 저장하고 함수는 실제 참가주 수를 반환한다.

# void Sort(int x[], int y[], float z[], int n); //
# n명의 참가자가 보관된 종합성적 z를 내림차순으로 정렬한다. 또 n개 참가자의 
# 예선, 준결승, 종합 성적을 종합 성적 순서에 맞춰야 한다.

# void Output(int x[], int y[], float z[], int n); //
# 종합성적 z의 내림차순으로 본선에 진출한 모든 참가자의 예선 성적, 준결승 성적,
# 대회 종합 성적을 출력한다.
# 결승에 간 참가자가 없을 경우 'Not Found'를 출력한다.

# 입력 형식 : "%d %d" //예선 성적, 준결승 성적
# 출력형식 1 : "%5d %5d %8.2f\n" // 예선 성적, 준결승 성적, 처음 두라운드의 종합 성적

# <<실행 예시>>
# 91 100
# 100 100
# 95 92
# 60 70
# 87 88
# 73 85
# 84 95
# -1 100

# 출력결과:
# 100 100 100.00
# 91 100 97.75
# 95 92 92.75
# 84 95 92.75
# ...


# int Input(int x[], int y[], float z[]); //키패드에서 각 참가자의 예선과 준결승 성적을 입력.
# 배열 x[] y[]를 각각 저장한다. 입력된 예선 성적이 0보다 작을 때 종료.
# 그리고 처음 두 라운드의 종합성적을 계산하여 배열 z[]에 저장하고 함수는 실제 참가자 수를 반환한다.

# void Sort(int x[], int y[], float z[], int n); //
# n명의 참가자가 보관된 종합성적 z를 내림차순으로 정렬한다. 또 n개 참가자의 
# 예선, 준결승, 종합 성적을 종합 성적 순서에 맞춰야 한다.

# void Output(int x[], int y[], float z[], int n); //
# 종합성적 z의 내림차순으로 본선에 진출한 모든 참가자의 예선 성적, 준결승 성적,
# 대회 종합 성적을 출력한다.
# 결승에 간 참가자가 없을 경우 'Not Found'를 출력한다.

# 입력 형식 : "%d %d" //예선 성적, 준결승 성적
# 출력형식 1 : "%5d %5d %8.2f\n" // 예선 성적, 준결승 성적, 처음 두라운드의 종합 성적

def Input(x, y, z):
    n = 0
    while n < 100:
        try:
            a,b =(input('예선 성적, 준결승 성적: ')).split()
            if int(a) < 0 or int(a) > 100 or int(b) < 0 or int(b) > 100:
                break
            else:
                n += 1
                a = int(a)
                b = int(b)
                c = 0.25*a + 0.75*b
                x.append(a)
                y.append(b)
                z.append(c)
        except:
            break

def Sort(x, y, z):
    for i in range(0,len(z)):
        for j in range(0, len(z)):
            if z[i] > z[j]:
                z[i],z[j] = z[j],z[i]
                x[i],x[j] = x[j],x[i]
                y[i],y[j] = y[j],y[i]
                
def Output(x, y, z):
    if 100 not in z:
        print("Not Found")
    for i in range(len(z)):
        if z[i] > 90:
            print(x[i], y[i], z[i])

x = []
y = []
z = []
Input(x, y, z)
Sort(x,y,z)
Output(x, y, z)